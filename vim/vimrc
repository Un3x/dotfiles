set nocompatible              " be iMproved, required
filetype off                  " required

if $COLORTERM == 'gnome-terminal'
  set t_Co=256
endif

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
" call vundle#begin('~/.vim/bundle')
"
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Colorscheme
syntax enable

" Set to auto read when a file is changed from the outside
set autoread

" enable mouse
set mouse=a

" Height of the command bar
set cmdheight=2

"Always show current position
set ruler

" show whitespace
set list
set listchars=trail:.

"autoremove whitespace EOL
autocmd BufWritePre * :%s/\s\+$//e

" Spaces & tabs
set encoding=utf-8
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smarttab
set expandtab
vnoremap < <gv
vnoremap > >gv

" Display Interface
set number 			" show line number
set showcmd 			" show command bar in the bottom

" Add a bit extra margin to the left
set foldcolumn=1

" Catching filetype
filetype indent on		" each filetype uses the filetype.vim in the indent folder
set ai
set si
set wrap

" Wildmenu
set wildmenu

" Lazy redraw to gain perf
set lazyredraw

" highlighting
set showmatch
set incsearch
set hlsearch
set ignorecase

" removing swap file
set noswapfile

" folding
set foldenable
set foldlevelstart=10
set foldnestmax=10
set foldmethod=indent

" visual indentation
Plugin 'nathanaelkane/vim-indent-guides'
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=lightgrey
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=darkgrey

" moving
nnoremap j gj
nnoremap k gk


" Smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Remove the Windows ^M - when the encodings gets messed up
noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm


" Close the current buffer
map <leader>bd :Bclose<cr>:tabclose<cr>gT

" Close all the buffers
map <leader>ba :bufdo bd<cr>


" leader
let mapleader=","

" fugitive
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'

" Syntastic
Plugin 'scrooloose/syntastic'
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_php_checkers=['php', 'phpcs']
let g:syntastic_php_phpcs_args='--standard=PSR2 -n'

" open Nerdtree
Plugin 'scrooloose/nerdtree'
map <tab> :NERDTreeToggle<CR>
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
Plugin 'xuyuanp/nerdtree-git-plugin'

" open CTRLP
Plugin 'ctrlpvim/ctrlp.vim'
let g:ctrlp_max_files = 0
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files']

" Vim Airline
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'bling/vim-bufferline'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

" Php Syntax
Plugin 'stanangeloff/php.vim'

" Php indenting
Plugin '2072/PHP-Indenting-for-VIm'
set autoindent

" debugger
Bundle 'joonty/vdebug.git'

" Note
Plugin 'xolox/vim-notes'
Plugin 'xolox/vim-misc'

" Syntax
Plugin 'groenewege/vim-less'
Plugin 'elzr/vim-json'
Plugin 'othree/html5.vim'
Plugin 'pangloss/vim-javascript'

" configuration for airline
set laststatus=2



""""""""""""""""""""""""""""""
" => Visual mode related
""""""""""""""""""""""""""""""
" Visual mode pressing * or # searches for the current selection
" Super useful! From an idea by Michael Naumann
vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>
vnoremap <silent> # :<C-u>call VisualSelection('', '')<CR>?<C-R>=@/<CR><CR>

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
